The system is: Windows - 10.0.18363 - AMD64
Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Build started 11-3-2021 13:55:46.
Project "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\3.17.3\CompilerIdC\CompilerIdC.vcxproj" on node 1 (default targets).
PrepareForBuild:
  Creating directory "Debug\".
  Creating directory "Debug\CompilerIdC.tlog\".
InitializeBuildStatus:
  Creating "Debug\CompilerIdC.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc142.pdb" /Gd /TC /FC /errorReport:queue CMakeCCompilerId.c
  CMakeCCompilerId.c
Link:
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdC.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdC.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdC.lib" /MACHINE:X64 Debug\CMakeCCompilerId.obj
  CompilerIdC.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\3.17.3\CompilerIdC\CompilerIdC.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_C_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_C_COMPILER=C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  Deleting file "Debug\CompilerIdC.tlog\unsuccessfulbuild".
  Touching "Debug\CompilerIdC.tlog\CompilerIdC.lastbuildstate".
Done Building Project "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\3.17.3\CompilerIdC\CompilerIdC.vcxproj" (default targets).

Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:01.31


Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.exe"

Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.vcxproj"

The C compiler identification is MSVC, found in "D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdC/CompilerIdC.exe"

Compiling the CXX compiler identification source file "CMakeCXXCompilerId.cpp" succeeded.
Compiler:  
Build flags: 
Id flags:  

The output was:
0
Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

Build started 11-3-2021 13:55:48.
Project "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\3.17.3\CompilerIdCXX\CompilerIdCXX.vcxproj" on node 1 (default targets).
PrepareForBuild:
  Creating directory "Debug\".
  Creating directory "Debug\CompilerIdCXX.tlog\".
InitializeBuildStatus:
  Creating "Debug\CompilerIdCXX.tlog\unsuccessfulbuild" because "AlwaysCreate" was specified.
ClCompile:
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\bin\HostX64\x64\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\" /Fd"Debug\vc142.pdb" /Gd /TP /FC /errorReport:queue CMakeCXXCompilerId.cpp
  CMakeCXXCompilerId.cpp
Link:
  C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\bin\HostX64\x64\link.exe /ERRORREPORT:QUEUE /OUT:".\CompilerIdCXX.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\CompilerIdCXX.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\CompilerIdCXX.lib" /MACHINE:X64 Debug\CMakeCXXCompilerId.obj
  CompilerIdCXX.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\3.17.3\CompilerIdCXX\CompilerIdCXX.exe
PostBuildEvent:
  for %%i in (cl.exe) do @echo CMAKE_CXX_COMPILER=%%~$PATH:i
  :VCEnd
  CMAKE_CXX_COMPILER=C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.28.29333\bin\Hostx64\x64\cl.exe
FinalizeBuildStatus:
  Deleting file "Debug\CompilerIdCXX.tlog\unsuccessfulbuild".
  Touching "Debug\CompilerIdCXX.tlog\CompilerIdCXX.lastbuildstate".
Done Building Project "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\3.17.3\CompilerIdCXX\CompilerIdCXX.vcxproj" (default targets).

Build succeeded.
    0 Warning(s)
    0 Error(s)

Time Elapsed 00:00:01.26


Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.exe"

Compilation of the CXX compiler identification source "CMakeCXXCompilerId.cpp" produced "CompilerIdCXX.vcxproj"

The CXX compiler identification is MSVC, found in "D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/3.17.3/CompilerIdCXX/CompilerIdCXX.exe"

Determining if the C compiler works passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_42b4c.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  testCCompiler.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_42b4c.dir\Debug\\" /Fd"cmTC_42b4c.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\testCCompiler.c"
  cmTC_42b4c.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_42b4c.exe



Detecting C compiler ABI info compiled with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_4670a.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  CMakeCCompilerABI.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_4670a.dir\Debug\\" /Fd"cmTC_4670a.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "C:\Program Files\JetBrains\CLion 2020.3\bin\cmake\win\share\cmake-3.17\Modules\CMakeCCompilerABI.c"
  cmTC_4670a.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_4670a.exe



Determining if the CXX compiler works passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_1adf7.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  testCXXCompiler.cxx
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_1adf7.dir\Debug\\" /Fd"cmTC_1adf7.dir\Debug\vc142.pdb" /Gd /TP /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\testCXXCompiler.cxx"
  cmTC_1adf7.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_1adf7.exe



Detecting CXX compiler ABI info compiled with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_07df6.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  CMakeCXXCompilerABI.cpp
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /GR /Fo"cmTC_07df6.dir\Debug\\" /Fd"cmTC_07df6.dir\Debug\vc142.pdb" /Gd /TP /errorReport:queue "C:\Program Files\JetBrains\CLion 2020.3\bin\cmake\win\share\cmake-3.17\Modules\CMakeCXXCompilerABI.cpp"
  cmTC_07df6.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_07df6.exe



Determining if the include file sys/types.h exists passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_b2e95.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  CheckIncludeFile.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b2e95.dir\Debug\\" /Fd"cmTC_b2e95.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\CheckIncludeFile.c"
  cmTC_b2e95.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_b2e95.exe



Determining if the include file stdint.h exists passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_54c20.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  CheckIncludeFile.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_54c20.dir\Debug\\" /Fd"cmTC_54c20.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\CheckIncludeFile.c"
  cmTC_54c20.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_54c20.exe



Determining if the include file stddef.h exists passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_384df.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  CheckIncludeFile.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_384df.dir\Debug\\" /Fd"cmTC_384df.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\CheckIncludeFile.c"
  cmTC_384df.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_384df.exe



Determining size of unsigned short passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_68a70.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  CMAKE_SIZEOF_UNSIGNED_SHORT.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_68a70.dir\Debug\\" /Fd"cmTC_68a70.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CheckTypeSize\CMAKE_SIZEOF_UNSIGNED_SHORT.c"
  cmTC_68a70.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_68a70.exe



Determining if the system is big endian passed with the following output:
Change Dir: D:/hku/jaar2/CSD2c_2021/portaudio/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):C:/Program Files (x86)/Microsoft Visual Studio/2019/Community/MSBuild/Current/Bin/MSBuild.exe cmTC_5a7c2.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=16.0 /v:m && Microsoft (R) Build Engine version 16.8.3+39993bd9d for .NET Framework
Copyright (C) Microsoft Corporation. All rights reserved.

  Microsoft (R) C/C++ Optimizing Compiler Version 19.28.29336 for x64
  Copyright (C) Microsoft Corporation.  All rights reserved.
  TestEndianess.c
  cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\"Debug\"" /D _MBCS /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_5a7c2.dir\Debug\\" /Fd"cmTC_5a7c2.dir\Debug\vc142.pdb" /Gd /TC /errorReport:queue "D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\TestEndianess.c"
  cmTC_5a7c2.vcxproj -> D:\hku\jaar2\CSD2c_2021\portaudio\cmake-build-debug\CMakeFiles\CMakeTmp\Debug\cmTC_5a7c2.exe


TestEndianess.c:
/* A 16 bit integer is required. */
typedef unsigned short cmakeint16;

/* On a little endian machine, these 16bit ints will give "THIS IS LITTLE ENDIAN."
   On a big endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_little[] =  {0x4854, 0x5349, 0x4920, 0x2053, 0x494c, 0x5454, 0x454c, 0x4520, 0x444e, 0x4149, 0x2e4e, 0x0000};

/* on a big endian machine, these 16bit ints will give "THIS IS BIG ENDIAN."
   On a little endian machine the characters will be exchanged pairwise. */
const cmakeint16 info_big[] =     {0x5448, 0x4953, 0x2049, 0x5320, 0x4249, 0x4720, 0x454e, 0x4449, 0x414e, 0x2e2e, 0x0000};

#ifdef __CLASSIC_C__
int main(argc, argv) int argc; char *argv[];
#else
int main(int argc, char *argv[])
#endif
{
  int require = 0;
  require += info_little[argc];
  require += info_big[argc];
  (void)argv;
  return require;
}


